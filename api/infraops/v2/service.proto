syntax = "proto3";

package infraops.v2;

option go_package = "github.com/alexfalkowski/infraops/api/infraops/v2";

// Range represents a range of values.
message Range {
  string min = 1;
  string max = 2;
}

// Resources represents the resources required for an application.
message Resources {
  Range cpu = 1;
  Range memory = 2;
  Range storage = 3;
}

// Application represents the application to be released.
message Application {
  string id = 1;
  string kind = 2;
  string name = 3;
  string namespace = 4;
  string domain = 5;
  string init_version = 6;
  string version = 7;
  string config_version = 8;
  Resources resources = 9;
  repeated string secrets = 10;
}

// Kubernetes applications to be released.
message Kubernetes {
  string version = 1;
  repeated Application applications = 2;
}

// Template represents the template to be used for a repository.
message Template {
  string owner = 1;
  string repository = 2;
}

// Repository represents the repository to be created.
message Repository {
  string name = 1;
  string description = 2;
  string homepage_url = 3;
  string visibility = 4;
  bool enable_pages = 5;
  bool is_template = 6;
  bool archived = 7;
  Template template = 8;
  repeated string topics = 9;
  repeated string checks = 10;
}

// Github specific configuration.
message Github {
  string version = 1;
  repeated Repository repositories = 2;
}

// BalancerZone represents the zone for a balancer.
message BalancerZone {
  string name = 1;
  string domain = 2;
  string ip = 3;
  repeated string record_names = 4;
}

// PageZone represents the zone for a page.
message PageZone {
  string name = 1;
  string domain = 2;
  string host = 3;
}

// Bucket defines an R2 bucket with a region (location, e.g EEUR)
message Bucket {
  string name = 1;
  string region = 2;
}

// Cloudflare specific configuration.
message Cloudflare {
  string version = 1;
  repeated BalancerZone balancer_zones = 2;
  repeated PageZone page_zones = 3;
  repeated Bucket buckets = 4;
}

// Cluster represents the cluster to be created.
message Cluster {
  string name = 1;
  string description = 2;
}

// DigitalOcean specific configuration.
message DigitalOcean {
  string version = 1;
  repeated Cluster clusters = 2;
}
