// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: infraops/v2/service.proto

package v2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Range represents a range of values.
type Range struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Min           string                 `protobuf:"bytes,1,opt,name=min,proto3" json:"min,omitempty"`
	Max           string                 `protobuf:"bytes,2,opt,name=max,proto3" json:"max,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Range) Reset() {
	*x = Range{}
	mi := &file_infraops_v2_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Range) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Range) ProtoMessage() {}

func (x *Range) ProtoReflect() protoreflect.Message {
	mi := &file_infraops_v2_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Range.ProtoReflect.Descriptor instead.
func (*Range) Descriptor() ([]byte, []int) {
	return file_infraops_v2_service_proto_rawDescGZIP(), []int{0}
}

func (x *Range) GetMin() string {
	if x != nil {
		return x.Min
	}
	return ""
}

func (x *Range) GetMax() string {
	if x != nil {
		return x.Max
	}
	return ""
}

// Resources represents the resources required for an application.
type Resources struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cpu           *Range                 `protobuf:"bytes,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory        *Range                 `protobuf:"bytes,2,opt,name=memory,proto3" json:"memory,omitempty"`
	Storage       *Range                 `protobuf:"bytes,3,opt,name=storage,proto3" json:"storage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Resources) Reset() {
	*x = Resources{}
	mi := &file_infraops_v2_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resources) ProtoMessage() {}

func (x *Resources) ProtoReflect() protoreflect.Message {
	mi := &file_infraops_v2_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resources.ProtoReflect.Descriptor instead.
func (*Resources) Descriptor() ([]byte, []int) {
	return file_infraops_v2_service_proto_rawDescGZIP(), []int{1}
}

func (x *Resources) GetCpu() *Range {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *Resources) GetMemory() *Range {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *Resources) GetStorage() *Range {
	if x != nil {
		return x.Storage
	}
	return nil
}

// Environment represents the Environment variables for an application.
type Environment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Environment) Reset() {
	*x = Environment{}
	mi := &file_infraops_v2_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Environment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Environment) ProtoMessage() {}

func (x *Environment) ProtoReflect() protoreflect.Message {
	mi := &file_infraops_v2_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Environment.ProtoReflect.Descriptor instead.
func (*Environment) Descriptor() ([]byte, []int) {
	return file_infraops_v2_service_proto_rawDescGZIP(), []int{2}
}

func (x *Environment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Environment) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Application represents the application to be released.
type Application struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Kind          string                 `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Namespace     string                 `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Domain        string                 `protobuf:"bytes,5,opt,name=domain,proto3" json:"domain,omitempty"`
	Version       string                 `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
	Resources     *Resources             `protobuf:"bytes,7,opt,name=resources,proto3" json:"resources,omitempty"`
	Secrets       []string               `protobuf:"bytes,8,rep,name=secrets,proto3" json:"secrets,omitempty"`
	Environments  []*Environment         `protobuf:"bytes,9,rep,name=environments,proto3" json:"environments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Application) Reset() {
	*x = Application{}
	mi := &file_infraops_v2_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Application) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application) ProtoMessage() {}

func (x *Application) ProtoReflect() protoreflect.Message {
	mi := &file_infraops_v2_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Application.ProtoReflect.Descriptor instead.
func (*Application) Descriptor() ([]byte, []int) {
	return file_infraops_v2_service_proto_rawDescGZIP(), []int{3}
}

func (x *Application) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Application) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *Application) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Application) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Application) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Application) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Application) GetResources() *Resources {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *Application) GetSecrets() []string {
	if x != nil {
		return x.Secrets
	}
	return nil
}

func (x *Application) GetEnvironments() []*Environment {
	if x != nil {
		return x.Environments
	}
	return nil
}

// Kubernetes applications to be released.
type Kubernetes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Applications  []*Application         `protobuf:"bytes,2,rep,name=applications,proto3" json:"applications,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Kubernetes) Reset() {
	*x = Kubernetes{}
	mi := &file_infraops_v2_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Kubernetes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Kubernetes) ProtoMessage() {}

func (x *Kubernetes) ProtoReflect() protoreflect.Message {
	mi := &file_infraops_v2_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Kubernetes.ProtoReflect.Descriptor instead.
func (*Kubernetes) Descriptor() ([]byte, []int) {
	return file_infraops_v2_service_proto_rawDescGZIP(), []int{4}
}

func (x *Kubernetes) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Kubernetes) GetApplications() []*Application {
	if x != nil {
		return x.Applications
	}
	return nil
}

// Template represents the template to be used for a repository.
type Template struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Owner         string                 `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Repository    string                 `protobuf:"bytes,2,opt,name=repository,proto3" json:"repository,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Template) Reset() {
	*x = Template{}
	mi := &file_infraops_v2_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Template) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Template) ProtoMessage() {}

func (x *Template) ProtoReflect() protoreflect.Message {
	mi := &file_infraops_v2_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Template.ProtoReflect.Descriptor instead.
func (*Template) Descriptor() ([]byte, []int) {
	return file_infraops_v2_service_proto_rawDescGZIP(), []int{5}
}

func (x *Template) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *Template) GetRepository() string {
	if x != nil {
		return x.Repository
	}
	return ""
}

// Pages describes whether the repository will have pages enabled.
type Pages struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cname         string                 `protobuf:"bytes,1,opt,name=cname,proto3" json:"cname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pages) Reset() {
	*x = Pages{}
	mi := &file_infraops_v2_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pages) ProtoMessage() {}

func (x *Pages) ProtoReflect() protoreflect.Message {
	mi := &file_infraops_v2_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pages.ProtoReflect.Descriptor instead.
func (*Pages) Descriptor() ([]byte, []int) {
	return file_infraops_v2_service_proto_rawDescGZIP(), []int{6}
}

func (x *Pages) GetCname() string {
	if x != nil {
		return x.Cname
	}
	return ""
}

// Repository represents the repository to be created.
type Repository struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Name                string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description         string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	HomepageUrl         string                 `protobuf:"bytes,3,opt,name=homepage_url,json=homepageUrl,proto3" json:"homepage_url,omitempty"`
	Visibility          string                 `protobuf:"bytes,4,opt,name=visibility,proto3" json:"visibility,omitempty"`
	IsTemplate          bool                   `protobuf:"varint,5,opt,name=is_template,json=isTemplate,proto3" json:"is_template,omitempty"`
	Archived            bool                   `protobuf:"varint,6,opt,name=archived,proto3" json:"archived,omitempty"`
	EnableCollaborators bool                   `protobuf:"varint,7,opt,name=enable_collaborators,json=enableCollaborators,proto3" json:"enable_collaborators,omitempty"`
	Template            *Template              `protobuf:"bytes,8,opt,name=template,proto3" json:"template,omitempty"`
	Pages               *Pages                 `protobuf:"bytes,9,opt,name=pages,proto3" json:"pages,omitempty"`
	Topics              []string               `protobuf:"bytes,10,rep,name=topics,proto3" json:"topics,omitempty"`
	Checks              []string               `protobuf:"bytes,11,rep,name=checks,proto3" json:"checks,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Repository) Reset() {
	*x = Repository{}
	mi := &file_infraops_v2_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Repository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Repository) ProtoMessage() {}

func (x *Repository) ProtoReflect() protoreflect.Message {
	mi := &file_infraops_v2_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Repository.ProtoReflect.Descriptor instead.
func (*Repository) Descriptor() ([]byte, []int) {
	return file_infraops_v2_service_proto_rawDescGZIP(), []int{7}
}

func (x *Repository) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Repository) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Repository) GetHomepageUrl() string {
	if x != nil {
		return x.HomepageUrl
	}
	return ""
}

func (x *Repository) GetVisibility() string {
	if x != nil {
		return x.Visibility
	}
	return ""
}

func (x *Repository) GetIsTemplate() bool {
	if x != nil {
		return x.IsTemplate
	}
	return false
}

func (x *Repository) GetArchived() bool {
	if x != nil {
		return x.Archived
	}
	return false
}

func (x *Repository) GetEnableCollaborators() bool {
	if x != nil {
		return x.EnableCollaborators
	}
	return false
}

func (x *Repository) GetTemplate() *Template {
	if x != nil {
		return x.Template
	}
	return nil
}

func (x *Repository) GetPages() *Pages {
	if x != nil {
		return x.Pages
	}
	return nil
}

func (x *Repository) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *Repository) GetChecks() []string {
	if x != nil {
		return x.Checks
	}
	return nil
}

// Github specific configuration.
type Github struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Repositories  []*Repository          `protobuf:"bytes,2,rep,name=repositories,proto3" json:"repositories,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Github) Reset() {
	*x = Github{}
	mi := &file_infraops_v2_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Github) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Github) ProtoMessage() {}

func (x *Github) ProtoReflect() protoreflect.Message {
	mi := &file_infraops_v2_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Github.ProtoReflect.Descriptor instead.
func (*Github) Descriptor() ([]byte, []int) {
	return file_infraops_v2_service_proto_rawDescGZIP(), []int{8}
}

func (x *Github) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Github) GetRepositories() []*Repository {
	if x != nil {
		return x.Repositories
	}
	return nil
}

// BalancerZone represents the zone for a balancer.
type BalancerZone struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Domain        string                 `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	Ipv4          string                 `protobuf:"bytes,3,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	Ipv6          string                 `protobuf:"bytes,4,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
	RecordNames   []string               `protobuf:"bytes,5,rep,name=record_names,json=recordNames,proto3" json:"record_names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BalancerZone) Reset() {
	*x = BalancerZone{}
	mi := &file_infraops_v2_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BalancerZone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalancerZone) ProtoMessage() {}

func (x *BalancerZone) ProtoReflect() protoreflect.Message {
	mi := &file_infraops_v2_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalancerZone.ProtoReflect.Descriptor instead.
func (*BalancerZone) Descriptor() ([]byte, []int) {
	return file_infraops_v2_service_proto_rawDescGZIP(), []int{9}
}

func (x *BalancerZone) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BalancerZone) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *BalancerZone) GetIpv4() string {
	if x != nil {
		return x.Ipv4
	}
	return ""
}

func (x *BalancerZone) GetIpv6() string {
	if x != nil {
		return x.Ipv6
	}
	return ""
}

func (x *BalancerZone) GetRecordNames() []string {
	if x != nil {
		return x.RecordNames
	}
	return nil
}

// PageZone represents the zone for a page.
type PageZone struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Domain        string                 `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	Host          string                 `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PageZone) Reset() {
	*x = PageZone{}
	mi := &file_infraops_v2_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PageZone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageZone) ProtoMessage() {}

func (x *PageZone) ProtoReflect() protoreflect.Message {
	mi := &file_infraops_v2_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageZone.ProtoReflect.Descriptor instead.
func (*PageZone) Descriptor() ([]byte, []int) {
	return file_infraops_v2_service_proto_rawDescGZIP(), []int{10}
}

func (x *PageZone) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PageZone) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *PageZone) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

// BucketZone defines the zone id and a domain to use.
type BucketZone struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Domain        string                 `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BucketZone) Reset() {
	*x = BucketZone{}
	mi := &file_infraops_v2_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BucketZone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BucketZone) ProtoMessage() {}

func (x *BucketZone) ProtoReflect() protoreflect.Message {
	mi := &file_infraops_v2_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BucketZone.ProtoReflect.Descriptor instead.
func (*BucketZone) Descriptor() ([]byte, []int) {
	return file_infraops_v2_service_proto_rawDescGZIP(), []int{11}
}

func (x *BucketZone) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BucketZone) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// Bucket defines an R2 bucket with name, region (location, e.g EEUR) and a zone.
type Bucket struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Region        string                 `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	Zone          *BucketZone            `protobuf:"bytes,3,opt,name=zone,proto3,oneof" json:"zone,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Bucket) Reset() {
	*x = Bucket{}
	mi := &file_infraops_v2_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bucket) ProtoMessage() {}

func (x *Bucket) ProtoReflect() protoreflect.Message {
	mi := &file_infraops_v2_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bucket.ProtoReflect.Descriptor instead.
func (*Bucket) Descriptor() ([]byte, []int) {
	return file_infraops_v2_service_proto_rawDescGZIP(), []int{12}
}

func (x *Bucket) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Bucket) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Bucket) GetZone() *BucketZone {
	if x != nil {
		return x.Zone
	}
	return nil
}

// Cloudflare specific configuration.
type Cloudflare struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	BalancerZones []*BalancerZone        `protobuf:"bytes,2,rep,name=balancer_zones,json=balancerZones,proto3" json:"balancer_zones,omitempty"`
	PageZones     []*PageZone            `protobuf:"bytes,3,rep,name=page_zones,json=pageZones,proto3" json:"page_zones,omitempty"`
	Buckets       []*Bucket              `protobuf:"bytes,4,rep,name=buckets,proto3" json:"buckets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Cloudflare) Reset() {
	*x = Cloudflare{}
	mi := &file_infraops_v2_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cloudflare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloudflare) ProtoMessage() {}

func (x *Cloudflare) ProtoReflect() protoreflect.Message {
	mi := &file_infraops_v2_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloudflare.ProtoReflect.Descriptor instead.
func (*Cloudflare) Descriptor() ([]byte, []int) {
	return file_infraops_v2_service_proto_rawDescGZIP(), []int{13}
}

func (x *Cloudflare) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Cloudflare) GetBalancerZones() []*BalancerZone {
	if x != nil {
		return x.BalancerZones
	}
	return nil
}

func (x *Cloudflare) GetPageZones() []*PageZone {
	if x != nil {
		return x.PageZones
	}
	return nil
}

func (x *Cloudflare) GetBuckets() []*Bucket {
	if x != nil {
		return x.Buckets
	}
	return nil
}

// Cluster represents the cluster to be created.
type Cluster struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Cluster) Reset() {
	*x = Cluster{}
	mi := &file_infraops_v2_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cluster) ProtoMessage() {}

func (x *Cluster) ProtoReflect() protoreflect.Message {
	mi := &file_infraops_v2_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cluster.ProtoReflect.Descriptor instead.
func (*Cluster) Descriptor() ([]byte, []int) {
	return file_infraops_v2_service_proto_rawDescGZIP(), []int{14}
}

func (x *Cluster) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Cluster) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// DigitalOcean specific configuration.
type DigitalOcean struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Clusters      []*Cluster             `protobuf:"bytes,2,rep,name=clusters,proto3" json:"clusters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DigitalOcean) Reset() {
	*x = DigitalOcean{}
	mi := &file_infraops_v2_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DigitalOcean) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigitalOcean) ProtoMessage() {}

func (x *DigitalOcean) ProtoReflect() protoreflect.Message {
	mi := &file_infraops_v2_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigitalOcean.ProtoReflect.Descriptor instead.
func (*DigitalOcean) Descriptor() ([]byte, []int) {
	return file_infraops_v2_service_proto_rawDescGZIP(), []int{15}
}

func (x *DigitalOcean) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DigitalOcean) GetClusters() []*Cluster {
	if x != nil {
		return x.Clusters
	}
	return nil
}

var File_infraops_v2_service_proto protoreflect.FileDescriptor

const file_infraops_v2_service_proto_rawDesc = "" +
	"\n" +
	"\x19infraops/v2/service.proto\x12\vinfraops.v2\"+\n" +
	"\x05Range\x12\x10\n" +
	"\x03min\x18\x01 \x01(\tR\x03min\x12\x10\n" +
	"\x03max\x18\x02 \x01(\tR\x03max\"\x8b\x01\n" +
	"\tResources\x12$\n" +
	"\x03cpu\x18\x01 \x01(\v2\x12.infraops.v2.RangeR\x03cpu\x12*\n" +
	"\x06memory\x18\x02 \x01(\v2\x12.infraops.v2.RangeR\x06memory\x12,\n" +
	"\astorage\x18\x03 \x01(\v2\x12.infraops.v2.RangeR\astorage\"7\n" +
	"\vEnvironment\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"\xa3\x02\n" +
	"\vApplication\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04kind\x18\x02 \x01(\tR\x04kind\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\x12\x16\n" +
	"\x06domain\x18\x05 \x01(\tR\x06domain\x12\x18\n" +
	"\aversion\x18\x06 \x01(\tR\aversion\x124\n" +
	"\tresources\x18\a \x01(\v2\x16.infraops.v2.ResourcesR\tresources\x12\x18\n" +
	"\asecrets\x18\b \x03(\tR\asecrets\x12<\n" +
	"\fenvironments\x18\t \x03(\v2\x18.infraops.v2.EnvironmentR\fenvironments\"d\n" +
	"\n" +
	"Kubernetes\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12<\n" +
	"\fapplications\x18\x02 \x03(\v2\x18.infraops.v2.ApplicationR\fapplications\"@\n" +
	"\bTemplate\x12\x14\n" +
	"\x05owner\x18\x01 \x01(\tR\x05owner\x12\x1e\n" +
	"\n" +
	"repository\x18\x02 \x01(\tR\n" +
	"repository\"\x1d\n" +
	"\x05Pages\x12\x14\n" +
	"\x05cname\x18\x01 \x01(\tR\x05cname\"\x82\x03\n" +
	"\n" +
	"Repository\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12!\n" +
	"\fhomepage_url\x18\x03 \x01(\tR\vhomepageUrl\x12\x1e\n" +
	"\n" +
	"visibility\x18\x04 \x01(\tR\n" +
	"visibility\x12\x1f\n" +
	"\vis_template\x18\x05 \x01(\bR\n" +
	"isTemplate\x12\x1a\n" +
	"\barchived\x18\x06 \x01(\bR\barchived\x121\n" +
	"\x14enable_collaborators\x18\a \x01(\bR\x13enableCollaborators\x121\n" +
	"\btemplate\x18\b \x01(\v2\x15.infraops.v2.TemplateR\btemplate\x12(\n" +
	"\x05pages\x18\t \x01(\v2\x12.infraops.v2.PagesR\x05pages\x12\x16\n" +
	"\x06topics\x18\n" +
	" \x03(\tR\x06topics\x12\x16\n" +
	"\x06checks\x18\v \x03(\tR\x06checks\"_\n" +
	"\x06Github\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12;\n" +
	"\frepositories\x18\x02 \x03(\v2\x17.infraops.v2.RepositoryR\frepositories\"\x85\x01\n" +
	"\fBalancerZone\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06domain\x18\x02 \x01(\tR\x06domain\x12\x12\n" +
	"\x04ipv4\x18\x03 \x01(\tR\x04ipv4\x12\x12\n" +
	"\x04ipv6\x18\x04 \x01(\tR\x04ipv6\x12!\n" +
	"\frecord_names\x18\x05 \x03(\tR\vrecordNames\"J\n" +
	"\bPageZone\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06domain\x18\x02 \x01(\tR\x06domain\x12\x12\n" +
	"\x04host\x18\x03 \x01(\tR\x04host\"4\n" +
	"\n" +
	"BucketZone\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06domain\x18\x02 \x01(\tR\x06domain\"o\n" +
	"\x06Bucket\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06region\x18\x02 \x01(\tR\x06region\x120\n" +
	"\x04zone\x18\x03 \x01(\v2\x17.infraops.v2.BucketZoneH\x00R\x04zone\x88\x01\x01B\a\n" +
	"\x05_zone\"\xcd\x01\n" +
	"\n" +
	"Cloudflare\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12@\n" +
	"\x0ebalancer_zones\x18\x02 \x03(\v2\x19.infraops.v2.BalancerZoneR\rbalancerZones\x124\n" +
	"\n" +
	"page_zones\x18\x03 \x03(\v2\x15.infraops.v2.PageZoneR\tpageZones\x12-\n" +
	"\abuckets\x18\x04 \x03(\v2\x13.infraops.v2.BucketR\abuckets\"?\n" +
	"\aCluster\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\"Z\n" +
	"\fDigitalOcean\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x120\n" +
	"\bclusters\x18\x02 \x03(\v2\x14.infraops.v2.ClusterR\bclustersB3Z1github.com/alexfalkowski/infraops/api/infraops/v2b\x06proto3"

var (
	file_infraops_v2_service_proto_rawDescOnce sync.Once
	file_infraops_v2_service_proto_rawDescData []byte
)

func file_infraops_v2_service_proto_rawDescGZIP() []byte {
	file_infraops_v2_service_proto_rawDescOnce.Do(func() {
		file_infraops_v2_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_infraops_v2_service_proto_rawDesc), len(file_infraops_v2_service_proto_rawDesc)))
	})
	return file_infraops_v2_service_proto_rawDescData
}

var file_infraops_v2_service_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_infraops_v2_service_proto_goTypes = []any{
	(*Range)(nil),        // 0: infraops.v2.Range
	(*Resources)(nil),    // 1: infraops.v2.Resources
	(*Environment)(nil),  // 2: infraops.v2.Environment
	(*Application)(nil),  // 3: infraops.v2.Application
	(*Kubernetes)(nil),   // 4: infraops.v2.Kubernetes
	(*Template)(nil),     // 5: infraops.v2.Template
	(*Pages)(nil),        // 6: infraops.v2.Pages
	(*Repository)(nil),   // 7: infraops.v2.Repository
	(*Github)(nil),       // 8: infraops.v2.Github
	(*BalancerZone)(nil), // 9: infraops.v2.BalancerZone
	(*PageZone)(nil),     // 10: infraops.v2.PageZone
	(*BucketZone)(nil),   // 11: infraops.v2.BucketZone
	(*Bucket)(nil),       // 12: infraops.v2.Bucket
	(*Cloudflare)(nil),   // 13: infraops.v2.Cloudflare
	(*Cluster)(nil),      // 14: infraops.v2.Cluster
	(*DigitalOcean)(nil), // 15: infraops.v2.DigitalOcean
}
var file_infraops_v2_service_proto_depIdxs = []int32{
	0,  // 0: infraops.v2.Resources.cpu:type_name -> infraops.v2.Range
	0,  // 1: infraops.v2.Resources.memory:type_name -> infraops.v2.Range
	0,  // 2: infraops.v2.Resources.storage:type_name -> infraops.v2.Range
	1,  // 3: infraops.v2.Application.resources:type_name -> infraops.v2.Resources
	2,  // 4: infraops.v2.Application.environments:type_name -> infraops.v2.Environment
	3,  // 5: infraops.v2.Kubernetes.applications:type_name -> infraops.v2.Application
	5,  // 6: infraops.v2.Repository.template:type_name -> infraops.v2.Template
	6,  // 7: infraops.v2.Repository.pages:type_name -> infraops.v2.Pages
	7,  // 8: infraops.v2.Github.repositories:type_name -> infraops.v2.Repository
	11, // 9: infraops.v2.Bucket.zone:type_name -> infraops.v2.BucketZone
	9,  // 10: infraops.v2.Cloudflare.balancer_zones:type_name -> infraops.v2.BalancerZone
	10, // 11: infraops.v2.Cloudflare.page_zones:type_name -> infraops.v2.PageZone
	12, // 12: infraops.v2.Cloudflare.buckets:type_name -> infraops.v2.Bucket
	14, // 13: infraops.v2.DigitalOcean.clusters:type_name -> infraops.v2.Cluster
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_infraops_v2_service_proto_init() }
func file_infraops_v2_service_proto_init() {
	if File_infraops_v2_service_proto != nil {
		return
	}
	file_infraops_v2_service_proto_msgTypes[12].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_infraops_v2_service_proto_rawDesc), len(file_infraops_v2_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_infraops_v2_service_proto_goTypes,
		DependencyIndexes: file_infraops_v2_service_proto_depIdxs,
		MessageInfos:      file_infraops_v2_service_proto_msgTypes,
	}.Build()
	File_infraops_v2_service_proto = out.File
	file_infraops_v2_service_proto_goTypes = nil
	file_infraops_v2_service_proto_depIdxs = nil
}
