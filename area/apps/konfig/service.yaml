apiVersion: apps/v1
kind: Deployment
metadata:
  name: konfig
  namespace: konfig
spec:
  selector:
    matchLabels:
      app: konfig
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: konfig
    spec:
      serviceAccountName: konfig
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        runAsGroup: 3000
        fsGroup: 2000
      volumes:
        - name: konfig-volume
          configMap:
            name: konfig-config
        - name: otlp-volume
          secret:
            secretName: otlp-secret
        - name: gh-volume
          secret:
            secretName: gh-secret
      containers:
        - name: konfig
          image: docker.io/alexfalkowski/konfig:v1.129.0
          imagePullPolicy: Always
          args: ["server"]
          volumeMounts:
            - name: konfig-volume
              mountPath: /etc/konfig/server.yaml
              subPath: server.yaml
            - name: otlp-volume
              mountPath: /etc/secrets/otlp
              readOnly: true
            - name: gh-volume
              mountPath: /etc/secrets/gh
              readOnly: true
          env:
            - name: KONFIG_CONFIG_FILE
              value: /etc/konfig/server.yaml
          ports:
            - containerPort: 8080
            - containerPort: 9090
          livenessProbe:
            httpGet:
              path: /livez
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
          resources:
            requests:
              cpu: 125m
              memory: 64Mi
            limits:
              cpu: 250m
              memory: 128Mi
          securityContext:
            readOnlyRootFilesystem: true
---
apiVersion: v1
kind: Service
metadata:
  name: konfig
  namespace: konfig
  labels:
    app: konfig
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: grpc
    port: 9090
    targetPort: 9090
    protocol: TCP
  selector:
    app: konfig
  type: ClusterIP
